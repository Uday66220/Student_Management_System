// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMS.Models;

#nullable disable

namespace SMS.Migrations
{
    [DbContext(typeof(StudentManagementContext))]
    partial class StudentManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SMS.Models.Attendence", b =>
                {
                    b.Property<int>("Student_id")
                        .HasColumnType("int");

                    b.Property<int>("attendence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Student_id")
                        .HasName("PK__Attenden__2A33069A8E01A867");

                    b.ToTable("Attendence", (string)null);
                });

            modelBuilder.Entity("SMS.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<int>("ClassTeacherId")
                        .HasColumnType("int")
                        .HasColumnName("class_teacher_id");

                    b.HasKey("ClassId")
                        .HasName("PK__Class__CB1927A0D4362CD3");

                    b.HasIndex("ClassTeacherId");

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("SMS.Models.Rank", b =>
                {
                    b.Property<int>("Studentid")
                        .HasColumnType("int")
                        .HasColumnName("studentid");

                    b.Property<int>("Classid")
                        .HasColumnType("int")
                        .HasColumnName("classid");

                    b.Property<int>("Subjectid")
                        .HasColumnType("int")
                        .HasColumnName("subjectid");

                    b.Property<int?>("Marks")
                        .HasColumnType("int")
                        .HasColumnName("marks");

                    b.HasKey("Studentid", "Classid", "Subjectid")
                        .HasName("PK__rank__43ED70A705E1F5DA");

                    b.ToTable("rank", (string)null);
                });

            modelBuilder.Entity("SMS.Models.Student", b =>
                {
                    b.Property<int>("RollNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Roll_No");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RollNo"));

                    b.Property<string>("Address")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TotalMarks")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Total_marks");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("RollNo")
                        .HasName("PK__Student__28B6682D56D2E57C");

                    b.HasIndex("ClassId");

                    b.ToTable("Student", null, t =>
                        {
                            t.HasTrigger("tr_student_insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("SMS.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Student_Subjects", (string)null);
                });

            modelBuilder.Entity("SMS.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Subject_Name");

                    b.HasKey("SubjectId")
                        .HasName("PK__SUBJECTS__AC1BA388ED887B27");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SMS.Models.SubjectMark", b =>
                {
                    b.Property<int?>("Marks")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Subject_Marks", null, t =>
                        {
                            t.HasTrigger("tr_studentsubjects_insert");

                            t.HasTrigger("tr_totalmarks_insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("SMS.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    b.Property<string>("Address")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Contact")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("TeacherId")
                        .HasName("PK__Teacher__EDF259440C5089D7");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("SMS.Models.Attendence", b =>
                {
                    b.HasOne("SMS.Models.Student", "Student")
                        .WithOne("Attendence")
                        .HasForeignKey("SMS.Models.Attendence", "Student_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SMS.Models.Class", b =>
                {
                    b.HasOne("SMS.Models.Teacher", "ClassTeacher")
                        .WithMany("Classes")
                        .HasForeignKey("ClassTeacherId")
                        .IsRequired()
                        .HasConstraintName("Class_classTeacherID_FK");

                    b.Navigation("ClassTeacher");
                });

            modelBuilder.Entity("SMS.Models.Student", b =>
                {
                    b.HasOne("SMS.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("Student_ClassID_FK");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("SMS.Models.StudentSubject", b =>
                {
                    b.HasOne("SMS.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("StudentSubjects_StudentID_FK");

                    b.HasOne("SMS.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("StudentSubjects_SubjectID_FK");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SMS.Models.SubjectMark", b =>
                {
                    b.HasOne("SMS.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("SubjectMarks_StudentID_FK");

                    b.HasOne("SMS.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("SubjectMarks_SubjectID_FK");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SMS.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SMS.Models.Student", b =>
                {
                    b.Navigation("Attendence");
                });

            modelBuilder.Entity("SMS.Models.Teacher", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
